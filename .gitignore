data

riboclette/models/bilstm/dh/__pycache__
riboclette/models/bilstm/dh/*.sh
riboclette/models/bilstm/dh/saved_models
riboclette/models/bilstm/dh/wandb 
riboclette/models/bilstm/dh/bilstm_dh_h5.ipynb 
riboclette/models/bilstm/dh/bilstm_dh_tune.ipynb

riboclette/models/bilstm/csh/__pycache__
riboclette/models/bilstm/csh/*.sh
riboclette/models/bilstm/csh/saved_models
riboclette/models/bilstm/csh/wandb 
riboclette/models/bilstm/csh/bilstm_csh_h5.ipynb 
riboclette/models/bilstm/csh/bilstm_csh_tune.ipynb

riboclette/models/rnn 
riboclette/models/wavenet

riboclette/zenodo-upload

riboclette/models/xlnet/__pycache__ 
riboclette/models/data

riboclette/models/xlnet/dh/job_scripts
riboclette/models/xlnet/dh/saved_models
riboclette/models/xlnet/dh/wandb
riboclette/models/xlnet/dh/xlnet_dh_h5.ipynb
riboclette/models/xlnet/dh/xlnet_dh_tune.ipynb

riboclette/models/xlnet/csh/saved_models
riboclette/models/xlnet/csh/wandb
riboclette/models/xlnet/csh/xlnet_csh_h5.ipynb
riboclette/models/xlnet/csh/xlnet_csh_tune.ipynb

riboclette/models/xlnet/func
riboclette/models/preds_h5s

riboclette/models/xlnet/interpretability/data
riboclette/models/xlnet/interpretability/plots 
riboclette/models/xlnet/interpretability/AA_int.ipynb 
riboclette/models/xlnet/interpretability/check_imp_genes.ipynb 
riboclette/models/xlnet/interpretability/codon_usage.ipynb

riboclette/models/xlnet/pseudolabeling/__pycache__
riboclette/models/xlnet/pseudolabeling/codon_optimization/fasta_out
riboclette/models/xlnet/pseudolabeling/codon_optimization/bms 
riboclette/models/xlnet/pseudolabeling/codon_optimization/ga_motifs 
riboclette/models/xlnet/pseudolabeling/codon_optimization/plots 
riboclette/models/xlnet/pseudolabeling/codon_optimization/codon_optimize_windows.ipynb 
riboclette/models/xlnet/pseudolabeling/codon_optimization/out_windows_full.ipynb 
riboclette/models/xlnet/pseudolabeling/codon_optimization/out_windows.ipynb 
riboclette/models/xlnet/pseudolabeling/codon_optimization/study_windows.ipynb 
riboclette/models/xlnet/pseudolabeling/codon_optimization/window_beamSearch_fast.ipynb 
riboclette/models/xlnet/pseudolabeling/codon_optimization/xlnet_plabel_utils.py
riboclette/models/xlnet/pseudolabeling/codon_optimization/job_scripts
riboclette/models/xlnet/pseudolabeling/job_scripts 
riboclette/models/xlnet/pseudolabeling/check_results_h5.ipynb
riboclette/models/xlnet/pseudolabeling/model_outputs 
riboclette/models/xlnet/pseudolabeling/xlnet_plabel_h5.ipynb
riboclette/models/xlnet/pseudolabeling/check_attr_preds.ipynb
riboclette/models/xlnet/pseudolabeling/xlnet_plabel_plots.ipynb
riboclette/models/xlnet/pseudolabeling/plots_utils.py
riboclette/models/xlnet/pseudolabeling/interpret
riboclette/models/xlnet/pseudolabeling/preds 
riboclette/models/xlnet/pseudolabeling/saved_models
riboclette/models/xlnet/pseudolabeling/wandb
riboclette/models/xlnet/pseudolabeling/plots
riboclette/models/xlnet/pseudolabeling/batch_effect_perf_analysis.ipynb 
riboclette/models/xlnet/pseudolabeling/dis_plot.py
riboclette/models/xlnet/pseudolabeling/distance_pcc_plots.ipynb 
riboclette/models/xlnet/pseudolabeling/network_motif_extraction.ipynb 
riboclette/models/xlnet/pseudolabeling/interpret_plabel_batch_extra.ipynb 
riboclette/models/xlnet/pseudolabeling/shapiq_motifs.ipynb  
riboclette/models/xlnet/pseudolabeling/xlnet_plabel_tune_exp1.ipynb
riboclette/models/xlnet/pseudolabeling/xlnet_plabel_tune_exp1.py 
riboclette/models/xlnet/pseudolabeling/xlnet_plabel_tune_exp2.ipynb
riboclette/models/xlnet/pseudolabeling/xlnet_plabel_tune_exp2.py

riboclette/preprocessing/df_reps_sims 
riboclette/preprocessing/instadeep.py 
riboclette/preprocessing/run_reps.sh

riboclette/models/xlnet/wandb 

riboclette/models/ribomimo

riboclette/multimodality/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/